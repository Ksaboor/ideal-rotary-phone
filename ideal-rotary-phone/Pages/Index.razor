@page "/"
@inject IHttpClientFactory _clientFactory
@using System.Net.Http.Json

@if (string.IsNullOrWhiteSpace(error) == false)
{

    <div class="h2">@error</div>

}
else if (ResponseData is null)
{

    <div class="h4">
        Loading...
    </div>

}
else
{
    
    <div class="container">
      <h2>Carousel Example</h2>  
      <div id="myCarousel" class="carousel slide" data-ride="carousel">
        <!-- Indicators -->
        <ol class="carousel-indicators">
          <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
          <li data-target="#myCarousel" data-slide-to="1"></li>
          <li data-target="#myCarousel" data-slide-to="2"></li>
        </ol>
    
        <!-- Wrapper for slides -->
        <div class="carousel-inner">
          <div class="item active">
            <img src="la.jpg" alt="Los Angeles" style="width:100%;">
          </div>
    
          <div class="item">
            <img src="chicago.jpg" alt="Chicago" style="width:100%;">
          </div>
        
          <div class="item">
            <img src="ny.jpg" alt="New york" style="width:100%;">
          </div>
        </div>
    
        <!-- Left and right controls -->
        <a class="left carousel-control" href="#myCarousel" data-slide="prev">
          <span class="glyphicon glyphicon-chevron-left"></span>
          <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" data-slide="next">
          <span class="glyphicon glyphicon-chevron-right"></span>
          <span class="sr-only">Next</span>
        </a>
      </div>
    </div>
    
    <BSCard CardType="CardType.Deck">
        @foreach (var item in ResponseData.Homepage)
        {
            @foreach (var bob in item.Card)
            {
                <BSCard>
                    <BSCard CardType="CardType.Image" VerticalAlignment="VerticalAlignment.Top" src=@bob.Image alt="256x180" />
                    <BSCard CardType="CardType.Body">
                        <BSCard CardType="CardType.Title">@bob.CardTitle</BSCard>
                        <BSCard CardType="CardType.Subtitle">@bob.Subtitle</BSCard>
                        <BSCard CardType="CardType.Text">@bob.Body</BSCard>
                        <BSButton Color="Color.Primary">primary</BSButton>
                    </BSCard>
                </BSCard>

            }
        }
    </BSCard>
}




@code {
    CMSModel ResponseData;
    string error;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get, "data");

        var client = _clientFactory.CreateClient("local");

        HttpResponseMessage response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            ResponseData = await response.Content.ReadFromJsonAsync<CMSModel>();
            error = null;
        }
        else
        {
            error = $"There was an error: {response.ReasonPhrase}";
        }
    }



}
